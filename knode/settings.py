"""
Django settings for knode project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import os
SECRET_KEY = os.getenv('SECRET_KEY')
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS','localhost').split(',')
DEBUG = os.getenv('DEBUG',"False") == "True"
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))),'.')

# Define these values for your local setting by importing from this setting

DATABASES = {
    'default': {
        'ENGINE': "django.db.backends.postgresql_psycopg2",
        'NAME': os.getenv('DATABASE_NAME','knode'),
        'USER': os.getenv('DATABASE_USER','postgres'),
        'PASSWORD': os.getenv('DATABASE_PASSWORD',''),
        'HOST': os.getenv('DATABASE_HOST','localhost'),
        'PORT': os.getenv('DATABASE_PORT','5432'),
    }
}
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'authentication',
    'feed',
    'tinymce',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'django.contrib.sitemaps'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'knode.urls.production'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'base','templates'),
            os.path.join(BASE_DIR, 'allauth','templates'),
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'knode.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#database


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

AUTH_USER_MODEL = "authentication.User" 

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "base","static"),
    os.path.join(BASE_DIR, "allauth","static"),
]

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  
MAILER_EMAIL_BACKEND = EMAIL_BACKEND  
EMAIL_HOST = os.getenv('EMAIL_HOST','')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD','')  
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER','')
EMAIL_PORT = 465  
EMAIL_USE_SSL = True  
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

TINYMCE_JS_ROOT = os.path.join(STATIC_URL, "tinymce")
TINYMCE_DEFAULT_CONFIG = {
    'selector':"#postform #id_content",
    'setup': 'tinymce_js',
    'branding': False,
    'menubar': False,
    'statusbar': False,
    'toolbar_location': 'bottom',
    'plugins' : 'advlist autolink link image lists code autoresize autosave save',
    'toolbar' : ' h1 | bold italic underline | link image |  alignleft aligncenter alignright alignjustify | outdent indent | undo redo restoredraft | submit',
    'width': '90%',
    'autosave_restore_when_empty': True,
    'images_upload_url': '/uploadfile/',
    'images_upload_handler': 'example_image_upload_handler',
    'content_css' : "/static/css/tinymce_content.css",
    'min_height': 600,
    'autoresize_on_init': False,
    'object_resizing' : False,
}
LOGIN_REDIRECT_URL="/"
LOGIN_URL = '/accounts/login'
LOGOUT_REDIRECT_URL = '/accounts/login'
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
SOCIALACCOUNT_QUERY_EMAIL = True
DEFAULT_FROM_EMAIL= os.getenv('DEFAULT_FROM_EMAIL')


SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]
